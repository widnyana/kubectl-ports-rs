on:
  workflow_call:
jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.platform.os }}
    if: github.event_name == 'release'
    env:
      RUST_BACKTRACE: 1
      CARGO_TERM_COLOR: always
      CARGO_UNSTABLE_SPARSE_REGISTRY: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-apple-darwin
            archive: zip
          - target: aarch64-apple-darwin
            archive: zip

    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md LICENSE"
          SRC_DIR: "src"
          ARCHIVE_TYPES: ${{ matrix.archive }}
          MINIFY: "yes"
          UPLOAD_MODE: "release"
